{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample service for managing users",
        "title": "User API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "soberkoder@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8888",
    "basePath": "/",
    "paths": {
        "/delete": {
            "delete": {
                "description": "Delete persons by id from users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete persons by id from users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "delete user",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/getToken": {
            "post": {
                "description": "Get Token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get Token",
                "parameters": [
                    {
                        "description": "get token",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/app.Credential"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/insert": {
            "post": {
                "description": "Insert persons into users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Insert persons into users",
                "parameters": [
                    {
                        "description": "Add user",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/app.addUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/show": {
            "get": {
                "description": "Show persons in users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Show persons in users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sort records",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Show max limit records",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Show records with current offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int64",
                        "example": 25,
                        "name": "age",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "male",
                        "name": "gender",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int64",
                        "example": 1,
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "ivan",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "RU",
                        "name": "nationality",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "ivanovich",
                        "name": "patronymic",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "ivanov",
                        "name": "surname",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/app.showUser"
                        }
                    },
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/test/{id}": {
            "get": {
                "description": "Show persons in users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Show persons in users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Show users by id",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/app.showUser"
                        }
                    },
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "delete": {
                "description": "Delete persons by id from users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete persons by id from users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "delete user",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/update": {
            "put": {
                "description": "Update persons in users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update persons in users",
                "parameters": [
                    {
                        "description": "Update user",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/app.updateUser"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/useToken": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Test tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "test tokens",
                "responses": {
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        }
    },
    "definitions": {
        "app.Credential": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "app.addUser": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "ivan"
                },
                "patronymic": {
                    "type": "string",
                    "example": "ivanovich"
                },
                "surname": {
                    "type": "string",
                    "example": "ivanov"
                }
            }
        },
        "app.showUser": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer",
                    "format": "int64",
                    "example": 25
                },
                "gender": {
                    "type": "string",
                    "example": "male"
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "ivan"
                },
                "nationality": {
                    "type": "string",
                    "example": "RU"
                },
                "patronymic": {
                    "type": "string",
                    "example": "ivanovich"
                },
                "surname": {
                    "type": "string",
                    "example": "ivanov"
                }
            }
        },
        "app.updateUser": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 50
                },
                "name": {
                    "type": "string",
                    "example": "ivan"
                },
                "patronymic": {
                    "type": "string",
                    "example": "ivanovich"
                },
                "surname": {
                    "type": "string",
                    "example": "ivanov"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}